"""
–ö–æ—Ä–æ—á —Å–º–æ—Ç—Ä–∏ –∏–∑ –º–∏–Ω—É—Å–æ–≤ —ç—Ç–æ–π —Ö—Ä–µ–Ω–∏:
1)–ø—Ä–∏ –≥–æ–≤–æ—Ä–µ–Ω–∏–∏ —Å–æ–∑–¥–∞–µ—Ç –Ω–∞ –∫–∞–∂–¥—ã–π –≤–æ–ø—Ä–æ—Å –æ—Ç–≤–µ—Ç –ø–æ —Ñ–∞–π–ª—É, —Ä–∞–Ω—å—à–µ —Ç–∞–∫–æ–≥–æ –Ω–µ –±—ã–ª–æ, —ç—Ç–æ –Ω–∞–¥–æ –±—É–¥–µ—Ç –∫–∞–∫-—Ç–æ –ø–æ–¥–ø—Ä–∞–≤–∏—Ç—å.
2) –í–∏–∫–∏–ø–µ–¥–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç, –Ω–æ –ø–æ—á–µ–º—É-—Ç–æ –Ω–µ –∏—â–µ—Ç –≤ —Å–∞–º–æ–π –≤–∏–∫–∏–ø–µ–¥–∏–∏ –æ—Ç–≤–µ—Ç, —Ñ—É–Ω–∫—Ü–∏—è –∫ –Ω–µ–π –ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –Ω—É –ø–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –¥—Ä—É–≥–∏—Ö –±–æ—Ç–∞, —Ç—É—Ç —Å–∫–∏–ø–∞–µ—Ç –ø–æ–∏—Å–∫ –∏ –≤—ã–¥–∞–µ—Ç —á—Ç–æ –Ω–µ –Ω–∞—à–ª–∞ –Ω–µ —á–µ–≥–æ.
3) –ù–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞ –æ—Ç–∫–∏–Ω—É–ª–∞—Å—å, —Ç—É—Ç —Å–∫–æ—Ä–µ–µ –≤—Å–µ–≥–æ —á—Ç–æ-—Ç–æ —Å —Å–∞–º–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–æ–π, —Ç–∞–∫ –∫–∞–∫ –ª–µ—Ç–æ–º —ç—Ç–∞ —Ö—Ä–µ–Ω—å —Ä–∞–±–æ—Ç–∞–ª–∞, –æ—Ç–¥–µ–ª—å–Ω–æ —Ç–æ–∂–µ –Ω–µ —Ö–æ—á–µ—Ç.
4) —Å –º–µ–º–∞–º–∏ –µ—â–µ —Ä–µ—à–∏–º –∫–æ–Ω–µ—á–Ω–æ, –Ω–æ –∏–∑-–∑–∞ —Ñ–∞–π–ª–∞ —Å –≥–æ–≤–æ—Ä–µ–Ω–∏–µ–º, –∞, —Ç–æ –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º–∞ –∏–∑ 1 –ø—É–Ω–∫—Ç–∞, –∫–∞—Ä—Ç–∏–Ω–∫–∏ –±–∞–Ω–∞–ª—å–Ω–æ –Ω–µ –æ—Ç–∫—Ä—ã–≤–∞—é—Ç—Å—è.
5) —Å–∏—Å—Ç–µ–º–∞ –æ–ø–ª–∞—Ç—ã, –Ω—É —Ç—É—Ç —è –æ—Å–æ–±–æ –Ω–µ –≤–ª–µ–∑–∞–ª, —Ç–∞–∫ –∫–∞–∫ —Å –Ω–µ–π –±—É–¥–µ—Ç —Å–≤—è–∑–∞–Ω–æ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω–æ–µ.

–ù—É –∏ –ø–æ –∫–æ–¥—É –æ—Å–æ–±–æ —Å–∏–ª—å–Ω–æ –Ω–µ –±—ã—á —è –≤–ø–µ—Ä–≤—ã–µ –ø–∏—à—É –≤ —Ç–∞–∫–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
"""


#—Ñ–∞–π–ª—ã –ø–∏—Ç–æ–Ω–∞
import config
import wiki
import say
import randoms_memes

#–æ—Å—Ç–∞–ª—å–Ω—ã–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
from datetime import datetime, timedelta
from enum import Enum
from telegram.ext import (
    ApplicationBuilder,
    ContextTypes,
    CommandHandler,
    MessageHandler,
    filters,
)
count_unforgettable = 1

class Event:
    text = None
    time = None
    chat_id = None


class ReminderBotState(Enum):
    DEFAULT = 0
    WAITING_FOR_EVENT_TEXT = 1
    WAITING_FOR_EVENT_TIME = 2
    WAITING_FOR_EVENT_WIKI = 3
    WAITING_FOR_EVENT_MENU = 4
    WAITING_FOR_EVENT_INFO = 5
    WAITING_FOR_EVENT_PAY = 6
    WAITING_FOR_EVENT_MEMES_RANDOMS = 7
    WAITING_FOR_EVENT_MEMES_CATEGORIES = 8

class ReminderBot:
    def __init__(self):
        self.events = dict()
        self.states = dict()
        self.init_bot()
    def init_bot(self):

        self.bot = ApplicationBuilder().token(config.Token).build()

        handler = CommandHandler("start", self.start_handler)
        self.bot.add_handler(handler)

        handler = CommandHandler("add_event", self.add_event_handler)
        self.bot.add_handler(handler)

        handler = CommandHandler("say", self.say_handler)
        self.bot.add_handler(handler)

        handler = CommandHandler("wiki", self.wiki_handler)
        self.bot.add_handler(handler)

        handler = CommandHandler("menu", self.menu_handler)
        self.bot.add_handler(handler)

        handler = CommandHandler("info", self.info_handler)
        self.bot.add_handler(handler)

        handler = CommandHandler("pay", self.pay_handler)
        self.bot.add_handler(handler)

        handler = CommandHandler("profile", self.profile_handler)
        self.bot.add_handler(handler)

        handler = CommandHandler("memes", self.memes_handler)
        self.bot.add_handler(handler)

        handler = CommandHandler("randoms", self.randoms_handler)
        self.bot.add_handler(handler)

        handler = CommandHandler("categories", self.categories_handler)
        self.bot.add_handler(handler)

        handler = MessageHandler(filters.TEXT, self.text_handler)
        self.bot.add_handler(handler)


    def run(self):
        self.bot.run_polling()


    async def start_handler(self, update, context):
        await context.bot.send_message(
            text="–ü—Ä–∏–≤–µ—Ç üòé, —è –±–æ—Ç-–Ω–∞–ø–æ–º–∏–Ω–∞–ª–∫–∞ –º–æ—è –æ—Å–Ω–æ–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ - —ç—Ç–æ –Ω–∞–ø–æ–º–∏–Ω–∞—Ç—å –≤–∞–º –æ –∫–∞–∫–∏—Ö –ª–∏–±–æ —Å–æ–±—ã—Ç–∏—è—Ö, –±—É–¥—å —Ç–æ –º–∏–Ω—É—Ç–∞ –∏–ª–∏ –≥–æ–¥–∞, —á—Ç–æ–±—ã –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å –º–æ–∏–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏ –∑–∞–π–¥–∏—Ç–µ –≤ –º–µ–Ω—é /menu",
            chat_id=update.effective_chat.id,
        )
        self.states[update.effective_chat.id] = ReminderBotState.DEFAULT
    async def menu_handler(self, update, context):
        await context.bot.send_message(
            text="üëã –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ–º!" + "                                                                                                             "
            "/memes - –≤—ã–¥–∞—á–∞ –º–µ–º–æ–≤ ""                                                                                                             "
            "/add_event - ‚è∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π" + "                                                                              "
            "/wiki - üåê –ø–æ–∏—Å–∫ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏" + "                                                                                           "
            "/pay - üíç 200 —Ä—É–± –Ω–∞ –º–µ—Å—è—Ü –∏ –±–µ–∑ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π" + "                                                  "
            "/profile - üíÇ –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å"+ "                                                                                                          "
            "/info - üåå–¥–∞–Ω–Ω—ã–µ –æ –±–æ—Ç–µ"+ "                                                                                       "
            "/say - üß†—Å–æ—Å—Ç–æ—è–Ω–∏–µ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞"+ "                                                                                             "

            ,
            chat_id=update.effective_chat.id,
        )
        self.states[update.effective_chat.id] = ReminderBotState.WAITING_FOR_EVENT_MENU
    async def info_handler(self, update, context):
        await context.bot.send_message(
            text="üë®üèª‚Äçüéì–î–∞–Ω–Ω—ã–π –±–æ—Ç —É–º–µ–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å –¥–∞–Ω–Ω—ã–µ –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—å –∏—Ö —á–µ—Ä–µ–∑ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ –≤—Ä–µ–º—è, "
                 "—Ç–∞–∫–∂–µ –≤ –µ–≥–æ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –≤—Ö–æ–¥–∏—Ç —É–º–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –∑–Ω–∞—á–µ–Ω–∏—è —Å–ª–æ–≤ –≤ –í–∏–∫–∏–ø–µ–¥–∏–∏ üîé, –≤ –¥–µ—Ñ–æ–ª—Ç–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –æ–Ω –º–æ–∂–µ—Ç —Ä–∞–∑–≥–æ–≤–∞—Ä–∏–≤–∞—Ç—å üòä"
            ,
            chat_id=update.effective_chat.id,
        )
        self.states[update.effective_chat.id] = ReminderBotState.DEFAULT

    async def memes_handler(self, update, context):
        await context.bot.send_message(
            text="–í—ã–±–∏—Ä–∏—Ç–µ –∂–µ–ª–∞–µ–º—ã–π –ø—Ä–æ–¥—É–∫—Ç: " "                                                                                                "
                 "/randoms - —Å–ª—É—á–∞–π–Ω—ã–π –º–µ–º" "                                                                                              "
                 "/categories - –º–µ–º—ã –æ—Ç—Å–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º"
            ,
            chat_id=update.effective_chat.id,
        )
        self.states[update.effective_chat.id] = ReminderBotState.DEFAULT

    async def randoms_handler(self, update, context):
        await context.bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=randoms_memes.random_memes(),
        )
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text="/next —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –º–µ–º",
        )
        self.states[update.effective_chat.id] = ReminderBotState.WAITING_FOR_EVENT_MEMES_RANDOMS

    async def categories_handler(self, update, context):
        await context.bot.send_message(
            text="–ö—É–ø–∏ –ø–æ–¥–ø–∏—Å–∫—É –±—Ä–∞—Ç–∏–∫"
            ,
            chat_id=update.effective_chat.id,
        )
        self.states[update.effective_chat.id] = ReminderBotState.DEFAULT

    async def say_handler(self, update, context):
        await context.bot.send_message(
            text="–ü—Ä–∏–≤–µ—Ç üëã"
            ,
            chat_id=update.effective_chat.id,
        )
        self.states[update.effective_chat.id] = ReminderBotState.DEFAULT
    async def pay_handler(self, update, context):
        await context.bot.send_message(
            text="–Ω–µ —Ç—Ä–∞—Ç—å –Ω–∞ —Ö—É–π–Ω—é", chat_id=update.effective_chat.id
        )
        self.states[
            update.effective_chat.id
        ] = ReminderBotState.DEFAULT

    async def profile_handler(self, update, context):

        await context.bot.send_message(
            text="üí¨ –î–æ—Å—Ç—É–ø–Ω–æ –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è:" + " " + str(count_unforgettable) + "                                                                   " +
                 "–ó–∞—á–µ–º –Ω—É–∂–Ω—ã –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è?""                                                                                "
                 " –ó–∞–¥–∞–≤–∞—è –≤–æ–ø—Ä–æ—Å—ã - —Ç—ã —Ç—Ä–∞—Ç–∏—à—å 1 –∑–∞–ø—Ä–æ—Å. –ë–µ—Å–ø–ª–∞—Ç–Ω–æ –º–æ–∂–Ω–æ —Ç—Ä–∞—Ç–∏—Ç—å 1 –∑–∞–ø—Ä–æ—Å–æ–≤ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å. "
                "–ó–∞–ø—Ä–æ—Å—ã –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 08:00 –ø–æ –ú–æ—Å–∫–æ–≤—Å–∫–æ–º—É –≤—Ä–µ–º–µ–Ω–∏."
                "–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –±–æ—Ç–∞ —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è–º–∏  –∏ —Ö–æ—á–µ—Ç—Å—è –Ω–æ–≤—ã—Ö –º–µ–º–æ–≤?""                                                                  "
                 "1Ô∏è‚É£ –í—ã –º–æ–∂–µ—Ç–µ –∫—É–ø–∏—Ç—å –ø—Ä–µ–º–∏—É–º-–ø–æ–¥–ø–∏—Å–∫—É –¥–ª—è –Ω–∞—à–µ–≥–æ –±–æ—Ç–∞ 200 —Ä—É–±–ª–µ–π –Ω–∞ –º–µ—Å—è—Ü –∏ –Ω–µ –ø–∞—Ä–∏—Ç—å—Å—è –æ –ª–∏–º–∏—Ç–∞—Ö.", chat_id=update.effective_chat.id
        )
        self.states[
            update.effective_chat.id
        ] = ReminderBotState.DEFAULT
    async def add_event_handler(self, update, context):
        await context.bot.send_message(
            text="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è", chat_id=update.effective_chat.id
        )
        self.states[
            update.effective_chat.id
        ] = ReminderBotState.WAITING_FOR_EVENT_TEXT
    async def wiki_handler(self, update, context):
        await context.bot.send_message(
            text="–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏—è –í–∏–∫–∏–ø–µ–¥–∏–∏, –Ω–∞–ø–∏—à–∏—Ç–µ —Å–ª–æ–≤–æ, –∑–Ω–∞—á–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å", chat_id=update.effective_chat.id
        )
        self.states[update.effective_chat.id] = ReminderBotState.WAITING_FOR_EVENT_WIKI
    async def text_handler(self, update, context):
        global count_unforgettable
        chat_id = update.effective_chat.id
        if chat_id not in self.states:
            self.states[chat_id] = ReminderBotState.DEFAULT

        if self.states[chat_id] == ReminderBotState.DEFAULT:
            await context.bot.send_message(
                chat_id=chat_id,
                text=say.speake(update.message.text, chat_id),
            )
            self.states[chat_id] = ReminderBotState.DEFAULT
        elif self.states[chat_id] == ReminderBotState.WAITING_FOR_EVENT_WIKI:
            await context.bot.send_message(
                chat_id=chat_id,
                text=wiki.getwiki(update.message.text),
            )
            self.states[chat_id] = ReminderBotState.DEFAULT

        elif self.states[chat_id] == ReminderBotState.WAITING_FOR_EVENT_MEMES_RANDOMS:
            await context.bot.send_photo(
                chat_id=chat_id,
                photo=randoms_memes.random_memes(),
            )
            print("—Ö–æ–π")
            await context.bot.send_message(
                chat_id=chat_id,
                text="/next —á—Ç–æ–±—ã –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–π –º–µ–º",
            )
            self.states[chat_id] = ReminderBotState.WAITING_FOR_EVENT_MEMES_RANDOMS

        elif self.states[chat_id] == ReminderBotState.WAITING_FOR_EVENT_TEXT:
            self.events[chat_id] = Event()
            self.events[chat_id].chat_id = chat_id
            self.events[chat_id].text = update.message.text
            await context.bot.send_message(
                chat_id=chat_id,
                text="–í–≤–µ–¥–∏—Ç–µ –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä 01.01.2001 00:00)",
            )
            self.states[chat_id] = ReminderBotState.WAITING_FOR_EVENT_TIME
        elif self.states[chat_id] == ReminderBotState.WAITING_FOR_EVENT_TIME:
            time = datetime.strptime(
                update.message.text, "%d.%m.%Y %H:%M"
            )
            time += timedelta(hours=-3)
            self.events[chat_id].time = time
            context.job_queue.run_once(
                self.process_event_job,
                self.events[chat_id].time,
                data=self.events[chat_id],
                chat_id=chat_id,
            )

            await context.bot.send_message(
                chat_id=chat_id,
                text="–°–æ–±—ã—Ç–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ"
            )
            count_unforgettable -= 1
            self.states[chat_id] = ReminderBotState.DEFAULT

    async def process_event_job(self, context):
        event = context.job.data
        for i in range(3):
            await context.bot.send_message(chat_id=event.chat_id, text=event.text)


if __name__ == "__main__":
    app = ReminderBot()
    app.run()
